<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Query data on SiriDB documentation</title>
    <link>https://docs.siridb.net/query-data/</link>
    <description>Recent content in Query data on SiriDB documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Sep 2019 15:39:27 +0200</lastBuildDate>
    
	<atom:link href="https://docs.siridb.net/query-data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>select</title>
      <link>https://docs.siridb.net/query-data/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query-data/select/</guid>
      <description>Syntax:
select &amp;lt;points/functions&amp;gt; from &amp;lt;match_series [&amp;lt;where&amp;gt;]&amp;gt; [&amp;lt;time_range&amp;gt;] [&amp;lt;merge_data&amp;gt;]  Example:
# Select points from &amp;quot;series-001&amp;quot; select * from &amp;quot;series-001&amp;quot;  functions It&amp;rsquo;s possible to select multiple aggregate functions in one query. This has some advantages over performing multiple queries since the database in this case only needs to search for the series and points once. To find the requested aggregate in the result we must add a prefix and/or suffix to the series name to make the name unique.</description>
    </item>
    
    <item>
      <title>aggregate functions</title>
      <link>https://docs.siridb.net/query-data/aggregate_functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query-data/aggregate_functions/</guid>
      <description>SiriDB supports multiple build-in aggregation and filter functions. Using these functions can be useful to reduce network traffic. Note that multiple functions can be combined using the arrow =&amp;gt; sign. (see select for more information on how to use and combine functions)
Most aggregation function accept an optional ts argument. When not providing the ts argument, SiriDB will usually return the last timestamp in the result. One exception is the first() function which will return the first timestamp instead.</description>
    </item>
    
    <item>
      <title>debug (timeit)</title>
      <link>https://docs.siridb.net/query-data/debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.siridb.net/query-data/debug/</guid>
      <description>Can be placed in front of any query and will return information about the time it took to process the query.
Syntax:
timeit &amp;lt;any_query&amp;gt;  Example result:
{ &amp;quot;__timeit__&amp;quot;: [ { &amp;quot;time&amp;quot;: 0.001156334212755393, &amp;quot;server&amp;quot;: &amp;quot;server04.siridb.net:9010&amp;quot; }, { &amp;quot;time&amp;quot;: 0.001481771469116211, &amp;quot;server&amp;quot;: &amp;quot;server01.siridb.net:9010&amp;quot; } ] }  Here __timeit__ is an array containing response data from each server involved in processing the query. The last server in this list is the server who has received the query.</description>
    </item>
    
  </channel>
</rss>